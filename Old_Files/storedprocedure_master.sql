DROP PROCEDURE KMSF.KMSFUKFINDATADUMPSP_MASTER();

CREATE OR REPLACE PROCEDURE KMSF.KMSFUKFINDATADUMPSP_MASTER()
RETURNS INT
LANGUAGE NZPLSQL AS
BEGIN_PROC
 declare 
    ReProcOptV INTEGER; 
	FsclYrPerV VARCHAR(6) ; 
    FsclStartDate DATE ;
    FsclStopDate DATE ;
    VMFsclStartDate DATE ;
    VMFsclStopDate DATE ;
    ExportPath VARCHAR(255) ;
    ExportName VARCHAR(255) ;
    StartDtimeV DATETIME ;
    EndDtimeV DATETIME ;
   -- LogEntryId BIGINT ;
    RsltCdV BYTEINT ;
    RsltTxt varchar(255) ;
	FsclYrPerRd RECORD;
	REC RECORD;
	LOGSEQ BIGINT;
	MAXACCTFCLYER RECORD;
	ACCTYERV VARCHAR(6); 
	DATERANGEYEARPER RECORD;
 BEGIN 
	StartDtimeV := NOW();
	ReProcOptV := NVL(ReProcOptV,0);
	DROP TABLE DFAULT.FSCLYRPERRDT IF EXISTS;
	CREATE TABLE DFAULT.FSCLYRPERRDT (FSCLYRPERMIN)  AS
    (SELECT MIN(FsclYrPer)  From KMSF.DSS__SMSDSS__KMSF_SF_ACCT_PD WHERE FSCLYRPER  > NVL((SELECT MAX(FSCLYRPER) FROM KMSF.KMSFUKFINDATADUMPPROCLOG WHERE NVL(RSLTCD,0) = 1),'201605') AND date(CAST(FSCLPEREND AS DATE))+5 < DATE(now()));
    --SELECT * FROM DFAULT.FSCLYRPERRDT ;
	FOR REC IN SELECT * FROM DFAULT.FSCLYRPERRDT LOOP; 
	 IF REC.FSCLYRPERMIN IS NULL THEN 
			RAISE NOTICE 'GOT HERE NOW';
			RETURN 1;
    ELSE
	    FsclYrPerV = REC.FSCLYRPERMIN;
		--RAISE NOTICE '%', REC.FSCLYRPERMIN;
	  --  RAISE NOTICE 'FINISHED' ;
	END IF;
	END LOOP;
	FsclYrPerV :='201709';
--	ReProcOpt :=0;

	RAISE NOTICE ' FsclYrPerV %', FsclYrPerV;
	
	DELETE FROM KMSF.KMSFUKFINDATADUMPPROCLOGDTL WHERE LOGENTRYID IN (SELECT LOGENTRYID FROM KMSF.KMSFUKFINDATADUMPPROCLOG WHERE FSCLYRPER = FsclYrPerV);
	DELETE FROM KMSF.KMSFUKFINDATADUMPPROCLOG WHERE FSCLYRPER = FsclYrPerV;
    
	FOR MAXACCTFCLYER IN SELECT NEXT VALUE FOR  KMSF.KMSFUKFINDATADUMPPROCLOG_SEQ AS SEQN LOOP; 
		LOGSEQ = MAXACCTFCLYER.SEQN;
	END LOOP;
	
	RAISE NOTICE 'SEQ NUM IS %', LOGSEQ;
	
	INSERT INTO KMSF.KMSFUKFINDATADUMPPROCLOG (LOGENTRYID, REPROCOPT, FSCLYRPER, STARTDTIME, RSLTCD) VALUES (LOGSEQ, ReProcOptV, FsclYrPerV, DATE(StartDtimeV), 0) ;
	
	IF NVL(FsclYrPerV, '') = '' THEN 
		UPDATE KMSF.KMSFUKFINDATADUMPPROCLOG SET ENDDTIME=NOW(), RSLTTXT = 'Process Failed - No Fiscal Period Was Passed' WHERE LogEntryId = LOGSEQ ;
        RETURN 0;
	ELSIF  FsclYrPerV <'201512' THEN 
		UPDATE KMSF.KMSFUKFINDATADUMPPROCLOG SET ENDDTIME=NOW(), RSLTTXT = 'Process Failed - The Minimum Fiscal Year Period Was Violated' WHERE LogEntryId = LOGSEQ;
        RETURN 0;
	ELSE 
		FOR MAXACCTFCLYER IN SELECT MAX(FsclYrPer) AS MAXDATE FROM  KMSF.DSS__SMSDSS__KMSF_SF_ACCT_PD WHERE EXP_END_DATE='9999-12-31' AND date(CAST(FSCLPEREND AS DATE))+5  < DATE(NOW()) LOOP; 
		IF  FOUND THEN 
			ACCTYERV = MAXACCTFCLYER.MAXDATE;
   		    RAISE NOTICE 'MAX DATE IN ACCT_PD %', ACCTYERV;
		ELSE 
		    RAISE NOTICE 'NO RECORD FOUND FOR MAX ACCOUNT YEAR';
			RETURN 1;
		END IF;
		END LOOP;
	END IF;
	
	FOR DATERANGEYEARPER IN SELECT FSCLPERSTART, FSCLPEREND, CASE WHEN ADD_MONTHS(CAST(FSCLPERSTART AS DATE), -5) <'2015-12-01' THEN '2015-12-01' ELSE ADD_MONTHS(CAST(FSCLPERSTART AS DATE), -5) END AS VMFSTART FROM KMSF.DSS__SMSDSS__KMSF_SF_ACCT_PD WHERE EXP_END_DATE ='9999-12-31' AND FSCLYRPER=FsclYrPerV LOOP; 
	IF FOUND THEN
		 FsclStartDate = DATERANGEYEARPER.FSCLPERSTART ;
 	     FsclStopDate =DATERANGEYEARPER.FSCLPEREND ;
    	 VMFsclStartDate = DATERANGEYEARPER.VMFSTART ;
    	 VMFsclStopDate =DATERANGEYEARPER.FSCLPEREND ;
    --ExportPath VARCHAR(255) ;
   -- ExportName VARCHAR(255) ;
   
       RAISE NOTICE '%, %,%,%', FsclStartDate,FsclStopDate,VMFsclStartDate,VMFsclStopDate;
	END IF; 
	END LOOP;
	
   -- UPDATE KMSF.KMSFUKFINDATADUMPPROCLOG SET ENDDTIME=NOW() , RSLTCD=1 , RSLTTXT='Success' where LogEntryID= LogEntryIdV;
   RETURN 0;
 END; 
END_PROC;

